[general]
log_level = INFO
log_file = log/myrcat.log
database_path = myrcat.db
publish_delay = 45
timezone = US/Pacific

[server]
host = 192.168.123.106
port = 8080

[artwork]
incoming_directory = incoming
publish_directory = publish
cache_directory = ca
default_artwork = templates/artwork/default_nowplaying.jpg

[web]
playlist_json = playlist.json
playlist_txt = playlist.txt

[lastfm]
api_key =
api_secret =
username =
password =

[listenbrainz]
token =

[facebook]
app_id =
app_secret =
access_token =
page_id =

[bluesky]
handle =
app_password =
enable_images = true
enable_ai_content = true
# Post frequency limit (hours between posts)
post_frequency = 1
image_width = 600
image_height = 600
# TESTING ONLY: Set to true to bypass frequency limits and post every track
testing_mode = false

[ai_content]
# AI model to use for content generation
model = claude-3-7-sonnet-latest
anthropic_api_key =
max_tokens = 125
# Temperature for content generation (0.0-1.0)
temperature = 0.7
# Percentage of posts to enhance with AI (0.0-1.0)
ai_post_ratio = 0.3
# Directory containing prompt templates
prompts_directory = templates/prompts
# TESTING ONLY: Set to true to use AI for all posts (100%)
testing_mode = False

[publish_exceptions]
publish_socials = False
# Disable specific services; ie: Bluesky, Facebook, LastFM, ListenBrainz - or None
disable_services = Bluesky, Facebook

# Skip lists for artists and titles - exact matches for either won't publish anything from the current Myriad payload
skip_artists_file = conf/skip_artists.txt
skip_titles_file = conf/skip_titles.txt

[database]
# SoundExchange reporting period (in days)
reporting_period = 90

# Database maintenance
cleanup_interval = 30
max_history = 1000

[social_analytics]
# Enable tracking social media engagement
enable_analytics = true
# Check frequency in hours (how often to check post engagement)
check_frequency = 6
# Retention period for analytics data in days
retention_period = 90
# Time window (in minutes) to prevent reposting the same artist
artist_repost_window = 60
# Generate text-based reports after analytics tasks
generate_reports = true
# Directory to save report files
reports_directory = reports
